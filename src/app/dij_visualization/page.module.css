
/* 页面标题栏 */
.titleBar{
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: var(--titleBarHeight);
    padding: var(--titleBarPadding);
    font-size: 1.5em;
    background-color: rgba(128, 128, 128, 0.196);
    backdrop-filter: blur(10px);
    z-index: 1000;
}

/* 可视化演示主体页面 */
.playground{
    width: 100%;
    height: 100%;
}

/* 悬浮式控制面板 */
.controlPanel{
    position: fixed;
    top: 90px;
    left: 30px;
    border-radius: 10px;
    background-color: grey;
    width: 370px;
    height: 600px;
    z-index: 999;
    overflow: hidden;
    box-shadow: 2px 1px 8px 1px rgba(0,0,0,0.3);
}

/* 悬浮式控制面板的标题栏 */
.panelTitle{
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px;
    background-color: rgb(79, 79, 79);
    cursor: all-scroll;
}

/* 悬浮式控制面板的标题栏左侧缩小按钮 */
.minimizeButton{
    background-color: yellow;
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    left: 5px;
    width: 17px;
    height: 17px;
    border-radius: 50%;
    cursor: default;
}

/* 悬浮式面板控制项基本设置 */
.controlItemContainer{
    margin: 10px;
}
.controlItemTitle{
    font-weight: bold;
    font-size: 18px;
    padding: 4px;
    border-radius: 8px;
    background-color: rgb(104, 104, 104);
}

/* 缩小图标 */
.minimizeButton:hover:after{
    content: "";
    background: url('../../../public/minimize.svg');
    background-size: contain;
    width: 50%;
    height: 50%;
    color: black;
}

/* 无限画布的背景 */
.infiniteBackground{
    width: 100vw;
    height: 100vh;
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(83, 83, 83);
    overflow: hidden;
    z-index: 100;
}

/* 无限画布的中心点 */
.centerPoint{
    border-radius: 50%;
    z-index: 101;
    position: relative;
}

/* svg画布 */
.svgCanvas{
    width: 100vw;
    height: 100vh;
    z-index: 100;
    position: absolute;
    transform: translate(-50%, -50%);
}
.svgOriginPoint{
    transform: translate(50%, 50%);
}